# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master



variables:
  # Container registry service connection established during pipeline creation


  crName: 'assignmentForCBRE'
  containerRegistry: 'assignmentforcbre.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    # - task: CopyFiles@2
    #   inputs:
    #     SourceFolder: '$(agent.builddirectory)'
    #     Contents: '**'
    #     TargetFolder: '$(Build.ArtifactStagingDirectory)'
    #     CleanTargetFolder: true
    # - task: PublishBuildArtifacts@1
    #   inputs:
    #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #     ArtifactName: 'drop'
        # publishLocation: 'Container'
    - task: Docker@2
      inputs:
        containerRegistry: 'acr_conn'
        command: 'login'
    - task: Docker@2
      inputs:
        containerRegistry: 'acr_conn'
        repository: 'testcontainer'
        command: 'build'
        Dockerfile: '**/Dockerfile'
      displayName: 'Docker Image Build'
#     - task: Docker@2
#       inputs:
#         containerRegistry: 'acr_conn'
#         repository: 'testcontainer'
#         command: 'push'
#       displayName: 'Docker Image Push'

# - stage: Deploy
#   displayName: Deploy
#   jobs:
#   - job: Deploy
#     displayName: Deploy
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: CopyFiles@2
#       inputs:
#         SourceFolder: '$(Build.ArtifactStagingDirectory)/drop'
#         Contents: '**'
#         TargetFolder: '$(System.DefaultWorkingDirectory)/drop'
#     - task: CmdLine@2
#       inputs:
#         workingDirectory: '$(System.DefaultWorkingDirectory)/drop'
#         script: 'dir'
  
#     - task: AzureWebAppContainer@1
#       inputs:
#         azureSubscription: 'az-conn'
#         appName: 'testWebAppUsingDocker'
#         containers: 'testcontainerregbyamit.azurecr.io/testcontainerregbyamit:$(Build.BuildId)'
  
    
    
    